[tool.poetry]
name = "dice-parser"
version = "0.1.0"
description = "A pretty versatile dice parser"
authors = ["Varun J <root@5ht2.me>"]
license = "BSD"
readme = "README.md"
include = ["LICENSE", "dice_parser/grammar.lark"]
packages = [{include = "dice_parser"}]

[tool.poetry.dependencies]
python = "^3.10"
lark = "^1.1.2"
pytest = {version = "^7.1.2", optional = true}
pytest-cov = {version = "^3.0.0", optional = true}
coverage = {extras = ["toml"], version = "^6.4.1", optional = true}
Sphinx = {version = "^5.0.2", optional = true}
sphinxcontrib-websupport = {version = "^1.2.4", optional = true}
furo = {version = "^2022.6.21", optional = true}

[tool.poetry.dev-dependencies]
black = "^22.6.0"
isort = "^5.10.1"

[tool.poetry.extras]
test = ["pytest", "pytest-cov", "coverage[toml]"]
docs = ["Sphinx", "sphinxcontrib-websupport", "furo"]

[tool.poetry.scripts]
d20 = 'dice_parser.__main__:__d20__'

[tool.black]
line-length = 100
skip-string-normalization = true

[tool.isort]
profile = "black"
lines_after_imports = 2

[tool.pyright]
include = ["dice_parser"]
exclude = ["**/__pycache__", "build", "dist", ".venv"]
useLibraryCodeForTypes = true
typeCheckingMode = "basic"
pythonVersion = "3.10"
strictListInference = true
strictDictionaryInference = true
strictSetInference = true
strictParameterNoneValue = true
reportMissingImports = "error"
reportUnusedImport = "error"
reportUnusedClass = "error"
reportUnusedFunction = "error"
reportUnusedVariable = "error"
reportGeneralTypeIssues = "error"
reportFunctionMemberAccess = "error"
reportDuplicateImport = "error"
reportUntypedFunctionDecorator = "error"
reportUnnecessaryTypeIgnoreComment = "warning"

[tool.coverage.run]
omit = [
  "dice_parser.__main__.py"
]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "@overload"
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
